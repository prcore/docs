{
	"info": {
		"_postman_id": "51250379-0a3d-41a7-89f1-2bbd30914b87",
		"name": "PrCore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21095091"
	},
	"item": [
		{
			"name": "Upload Event Log",
			"item": [
				{
					"name": "CSV",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"Case ID\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "XES",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 XES",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-XES.zip"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"org:resource\": \"RESOURCE\",\n        \"lifecycle:transition\": \"TRANSITION\",\n        \"concept:name\": \"ACTIVITY\",\n        \"time:timestamp\": \"TIMESTAMP\",\n        \"case:REG_DATE\": \"DATETIME\",\n        \"case:concept:name\": \"CASE_ID\",\n        \"case:AMOUNT_REQ\": \"NUMBER\"\n    },\n    \"case_attributes\": [\"case:REG_DATE\", \"case:AMOUNT_REQ\"],\n    \"fast_mode\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"concept:name\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"concept:name\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Project Operations",
			"item": [
				{
					"name": "Upload event log",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "BPIC 2012 CSV",
									"type": "file",
									"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
								},
								{
									"key": "separator",
									"value": ",",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{server}}/event_log",
							"host": [
								"{{server}}"
							],
							"path": [
								"event_log"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set columns definition",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"REG_DATE\", \"AMOUNT_REQ\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/event_log/{{event_log_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"event_log",
								"{{event_log_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
									"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ],\n      \"plugin-causallift-resource-allocation\":{\n         \"available_resources\":[\n            \"Resource_A\",\n            \"Resource_B\",\n            \"Resource_C\",\n            \"Resource_D\",\n            \"Resource_E\",\n            \"Resource_F\",\n            \"Resource_G\",\n            \"Resource_H\",\n            \"Resource_I\",\n            \"Resource_J\",\n            \"Resource_K\",\n            \"Resource_L\",\n            \"Resource_M\",\n            \"Resource_N\",\n            \"Resource_O\",\n            \"Resource_P\",\n            \"Resource_Q\",\n            \"Resource_R\",\n            \"Resource_S\",\n            \"Resource_T\",\n            \"Resource_U\",\n            \"Resource_V\",\n            \"Resource_W\",\n            \"Resource_X\",\n            \"Resource_Y\",\n            \"Resource_Z\"\n         ],\n         \"treatment_duration\":\"1h\"\n      }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/project",
							"host": [
								"{{server}}"
							],
							"path": [
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rename or add description",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New name\",\n    \"description\": \"This is a custom description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/project/{{project_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/project/all?page=1&size=100",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"all"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Prescriptions",
			"item": [
				{
					"name": "Get Dataset Result",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition Copy",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"Case ID\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ],\n    \"additional_info\": {\n        \"plugin-causallift-resource-allocation\": {\n            \"available_resources\": [\"Resource_A\", \"Resource_B\", \"Resource_C\", \"Resource_D\", \"Resource_E\", \"Resource_F\", \"Resource_G\", \"Resource_H\", \"Resource_I\", \"Resource_J\", \"Resource_K\", \"Resource_L\", \"Resource_M\", \"Resource_N\", \"Resource_O\", \"Resource_P\", \"Resource_Q\", \"Resource_R\", \"Resource_S\", \"Resource_T\", \"Resource_U\", \"Resource_V\", \"Resource_W\", \"Resource_X\", \"Resource_Y\", \"Resource_Z\"],\n            \"treatment_duration\": \"1h\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload ongoing dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV Ongoing",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-ongoing-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/project/{{project_id}}/result",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"result"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get ongoing dataset result",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/result/{{result_key}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"result",
										"{{result_key}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Streaming Result",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV",
											"type": "file",
											"src": "/home/zhaosi/bpic2012-CSV/bpic2012.csv.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"Case ID\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ],\n    \"additional_info\": {\n        \"plugin-causallift-resource-allocation\":{\n            \"available_resources\":[\n                \"Resource_A\",\n                \"Resource_B\",\n                \"Resource_C\",\n                \"Resource_D\",\n                \"Resource_E\",\n                \"Resource_F\",\n                \"Resource_G\",\n                \"Resource_H\",\n                \"Resource_I\",\n                \"Resource_J\",\n                \"Resource_K\",\n                \"Resource_L\",\n                \"Resource_M\",\n                \"Resource_N\",\n                \"Resource_O\",\n                \"Resource_P\",\n                \"Resource_Q\",\n                \"Resource_R\",\n                \"Resource_S\",\n                \"Resource_T\",\n                \"Resource_U\",\n                \"Resource_V\",\n                \"Resource_W\",\n                \"Resource_X\",\n                \"Resource_Y\",\n                \"Resource_Z\"\n            ],\n            \"treatment_duration\":\"1h\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start simulation",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/stream/start/simulating",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"stream",
										"start",
										"simulating"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get streaming result",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/stream/result",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"stream",
										"result"
									]
								}
							},
							"response": []
						},
						{
							"name": "Stop streaming",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/stream/stop",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"stream",
										"stop"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Advanced Usage",
			"item": [
				{
					"name": "Stream New Events",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"REG_DATE\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start streaming",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/stream/start",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"stream",
										"start"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post new event",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {",
											"    if (!minValue) {",
											"        minValue = 20;",
											"        maxValue = 20;",
											"    }",
											"",
											"    if (!maxValue) {",
											"        maxValue = minValue;",
											"    }",
											"",
											"    let length = _.random(minValue, maxValue),",
											"        randomString = \"\";",
											"",
											"    for (let i = 0; i < length; i++)",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));",
											"    return randomString;",
											"}",
											"",
											"pm.variables.set('randomString', randomString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Case ID\": \"{{randomString}}\",\n    \"start_time\": \"2011-09-30T22:38:44.546\",\n    \"end_time\": \"2011-09-30T22:38:44.546\",\n    \"AMOUNT_REQ\": \"20000\",\n    \"REG_DATE\": \"2011-09-30T22:38:44.546Z\",\n    \"Activity\": \"A_SUBMITTED\",\n    \"Resource\": \"112\",\n    \"COMPLETE_INDICATOR\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get streaming result",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/stream/result",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"stream",
										"result"
									]
								}
							},
							"response": []
						},
						{
							"name": "Stop streaming",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/stream/stop",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"stream",
										"stop"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Download Datasets",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"REG_DATE\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Download original dataset",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/dataset/original",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"dataset",
										"original"
									]
								}
							},
							"response": []
						},
						{
							"name": "Download procesed dataset",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/dataset/processed",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"dataset",
										"processed"
									]
								}
							},
							"response": []
						},
						{
							"name": "Download ongoing dataset",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/dataset/ongoing",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"dataset",
										"ongoing"
									]
								}
							},
							"response": []
						},
						{
							"name": "Download simulation dataset",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}/dataset/simulation",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"dataset",
										"simulation"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Project Operations",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"REG_DATE\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"DURATION\",\n                \"operator\": \"LESS_THAN_OR_EQUAL\",\n                \"value\": \"2 weeks\"\n            }\n        ],\n        [\n            {\n                \"column\": \"REG_DATE\",\n                \"operator\": \"EARLIER_THAN_OR_EQUAL\",\n                \"value\": \"2023-03-07T20:50:00Z\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Resource\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"112\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get old definition",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}/definition",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}",
										"definition"
									]
								}
							},
							"response": []
						},
						{
							"name": "Redo columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"REG_DATE\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project again",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change project definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project/{{project_id}}/definition",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"definition"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revisit the project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Rename or add description",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New name\",\n    \"description\": \"This is a custom description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete project",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all projects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/all?page=1&size=100",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"all"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "size",
											"value": "100"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Event Log Operations",
					"item": [
						{
							"name": "Re-upload File",
							"item": [
								{
									"name": "Upload event log",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "BPIC 2012 CSV",
													"type": "file",
													"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
												},
												{
													"key": "separator",
													"value": ",",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{server}}/event_log",
											"host": [
												"{{server}}"
											],
											"path": [
												"event_log"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set columns definition",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"Case ID\", \"AMOUNT_REQ\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{server}}/event_log/{{event_log_id}}",
											"host": [
												"{{server}}"
											],
											"path": [
												"event_log",
												"{{event_log_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a project",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
													"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{server}}/project",
											"host": [
												"{{server}}"
											],
											"path": [
												"project"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server}}/project/{{project_id}}",
											"host": [
												"{{server}}"
											],
											"path": [
												"project",
												"{{project_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload new training dataset",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
												},
												{
													"key": "separator",
													"value": ",",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{server}}/event_log/{{event_log_id}}/upload",
											"host": [
												"{{server}}"
											],
											"path": [
												"event_log",
												"{{event_log_id}}",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server}}/project/{{project_id}}",
											"host": [
												"{{server}}"
											],
											"path": [
												"project",
												"{{project_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Log Definition",
							"item": [
								{
									"name": "Upload event log",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "BPIC 2012 XES",
													"type": "file",
													"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-XES.zip"
												}
											]
										},
										"url": {
											"raw": "{{server}}/event_log",
											"host": [
												"{{server}}"
											],
											"path": [
												"event_log"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set columns definition (fast mode false)",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"columns_definition\": {\n        \"org:resource\": \"RESOURCE\",\n        \"lifecycle:transition\": \"TRANSITION\",\n        \"concept:name\": \"ACTIVITY\",\n        \"time:timestamp\": \"TIMESTAMP\",\n        \"case:REG_DATE\": \"DATETIME\",\n        \"case:concept:name\": \"CASE_ID\",\n        \"case:AMOUNT_REQ\": \"NUMBER\"\n    },\n    \"case_attributes\": [\"case:REG_DATE\", \"case:AMOUNT_REQ\"],\n    \"fast_mode\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{server}}/event_log/{{event_log_id}}",
											"host": [
												"{{server}}"
											],
											"path": [
												"event_log",
												"{{event_log_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a project",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
													"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"concept:name\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"concept:name\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{server}}/project",
											"host": [
												"{{server}}"
											],
											"path": [
												"project"
											]
										}
									},
									"response": []
								},
								{
									"name": "Download procesed dataset",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server}}/project/{{project_id}}/dataset/processed",
											"host": [
												"{{server}}"
											],
											"path": [
												"project",
												"{{project_id}}",
												"dataset",
												"processed"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Plugin Operations",
					"item": [
						{
							"name": "Check available plugins",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/plugin/available",
									"host": [
										"{{server}}"
									],
									"path": [
										"plugin",
										"available"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012 CSV",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"AMOUNT_REQ\": \"NUMBER\",\n        \"REG_DATE\": \"DATETIME\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    },\n    \"case_attributes\": [\"Case ID\", \"AMOUNT_REQ\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A_APPROVED\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_SENT_BACK\"\n            }\n        ]\n    ],\n      \"plugin-causallift-resource-allocation\":{\n         \"available_resources\":[\n            \"Resource_A\",\n            \"Resource_B\",\n            \"Resource_C\",\n            \"Resource_D\",\n            \"Resource_E\",\n            \"Resource_F\",\n            \"Resource_G\",\n            \"Resource_H\",\n            \"Resource_I\",\n            \"Resource_J\",\n            \"Resource_K\",\n            \"Resource_L\",\n            \"Resource_M\",\n            \"Resource_N\",\n            \"Resource_O\",\n            \"Resource_P\",\n            \"Resource_Q\",\n            \"Resource_R\",\n            \"Resource_S\",\n            \"Resource_T\",\n            \"Resource_U\",\n            \"Resource_V\",\n            \"Resource_W\",\n            \"Resource_X\",\n            \"Resource_Y\",\n            \"Resource_Z\"\n         ],\n         \"treatment_duration\":\"1h\"\n      }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project repeatly until there is a plugin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											"postman.setEnvironmentVariable(\"plugin_id\", jsonData.project.plugins[0].id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update plugin",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameters\": {\n        \"encoding\": \"BOOLEAN\"\n    },\n    \"additional_info\": {\n        \"random\": 10\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/plugin/{{plugin_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"plugin",
										"{{plugin_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable plugin",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{server}}/plugin/{{plugin_id}}/disable",
									"host": [
										"{{server}}"
									],
									"path": [
										"plugin",
										"{{plugin_id}}",
										"disable"
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable plugin",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{server}}/plugin/{{plugin_id}}/enable",
									"host": [
										"{{server}}"
									],
									"path": [
										"plugin",
										"{{plugin_id}}",
										"enable"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check plugin status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/plugin/{{plugin_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"plugin",
										"{{plugin_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "BPIC 2017",
			"item": [
				{
					"name": "Upload event log",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2017-XES.zip"
								},
								{
									"key": "separator",
									"value": ",",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{server}}/event_log",
							"host": [
								"{{server}}"
							],
							"path": [
								"event_log"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set columns definition",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"columns_definition\": {\n        \"concept:name\": \"ACTIVITY\",\n        \"lifecycle:transition\": \"TRANSITION\",\n        \"time:timestamp\": \"TIMESTAMP\",\n        \"case:concept:name\": \"CASE_ID\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/event_log/{{event_log_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"event_log",
								"{{event_log_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
									"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"concept:name\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_Accepted\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"concept:name\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"O_Returned\"\n            }\n        ]\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/project",
							"host": [
								"{{server}}"
							],
							"path": [
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start simulation",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}/stream/start/simulating",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}",
								"stream",
								"start",
								"simulating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get streaming result",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}/stream/result",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}",
								"stream",
								"result"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop streaming",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}/stream/stop",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}",
								"stream",
								"stop"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BPIC 2011",
			"item": [
				{
					"name": "Upload event log",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2011-XES.zip"
								}
							]
						},
						"url": {
							"raw": "{{server}}/event_log",
							"host": [
								"{{server}}"
							],
							"path": [
								"event_log"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set columns definition",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"columns_definition\": {\n        \"Activity code\": \"ACTIVITY\",\n        \"time:timestamp\": \"TIMESTAMP\",\n        \"lifecycle:transition\": \"TRANSITION\",\n        \"case:concept:name\": \"CASE_ID\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/event_log/{{event_log_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"event_log",
								"{{event_log_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
									"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"Activity code\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"370606\"\n            }\n        ]\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/project",
							"host": [
								"{{server}}"
							],
							"path": [
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start simulation",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}/stream/start/simulating",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}",
								"stream",
								"start",
								"simulating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get streaming result",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}/stream/result",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}",
								"stream",
								"result"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop streaming",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{server}}/project/{{project_id}}/stream/stop",
							"host": [
								"{{server}}"
							],
							"path": [
								"project",
								"{{project_id}}",
								"stream",
								"stop"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Getters",
			"item": [
				{
					"name": "Hello world",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}",
							"host": [
								"{{server}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get existing event logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/event_log/all",
							"host": [
								"{{server}}"
							],
							"path": [
								"event_log",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get existing plugin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/plugin/all",
							"host": [
								"{{server}}"
							],
							"path": [
								"plugin",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Other tests",
			"item": [
				{
					"name": "Very small dataset",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "Manual CSV",
											"type": "file",
											"src": "/home/zhaosi/data.csv"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"case_id\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"DURATION\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"100 days\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Duration with decimals",
					"item": [
						{
							"name": "Upload event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"event_log_id\", jsonData.event_log_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "BPIC 2012",
											"type": "file",
											"src": "/home/zhaosi/Sites/PrCore/static/download/bpic2012-CSV.zip"
										},
										{
											"key": "separator",
											"value": ",",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server}}/event_log",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set columns definition",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"columns_definition\": {\n        \"Case ID\": \"CASE_ID\",\n        \"start_time\": \"START_TIMESTAMP\",\n        \"end_time\": \"END_TIMESTAMP\",\n        \"Activity\": \"ACTIVITY\",\n        \"Resource\": \"RESOURCE\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/event_log/{{event_log_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"event_log",
										"{{event_log_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"project_id\", jsonData.project.id);",
											"postman.setEnvironmentVariable(\"result_key\", jsonData.result_key);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_log_id\": {{event_log_id}},\n    \"positive_outcome\": [\n        [\n            {\n                \"column\": \"DURATION\",\n                \"operator\": \"LESS_THAN_OR_EQUAL\",\n                \"value\": \"2.21 days\"\n            }\n        ]\n    ],\n    \"treatment\": [\n        [\n            {\n                \"column\": \"Activity\",\n                \"operator\": \"EQUAL\",\n                \"value\": \"A\"\n            }\n        ]\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/project",
									"host": [
										"{{server}}"
									],
									"path": [
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/project/{{project_id}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"project",
										"{{project_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "UaJW0QvkMA1cVnOXB89E0NbLf3JRRoHwv2wWmaY5v=QYpaxr1UD9/FupeZ85sa2r",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "server",
			"value": "localhost:8000",
			"type": "string"
		}
	]
}